type User @model @key(name: "byPhoneNumber", fields: ["phoneNumber"], queryField: "usersByPhoneNumber") @key(name: "byEmail", fields: ["email"], queryField: "usersByEmail") @key(name: "byName", fields: ["name"], queryField: "usersByName") {
  id: ID!
  phoneNumber: AWSPhone!
  email: AWSEmail!
  name: String!
  pushToken: String!
  friends: [ID]
  availability: Availability @connection
}

type Availability @model @auth(rules: [{allow: public}]) {
  id: ID!
  Sunday: [AWSTime]
  Monday: [AWSTime]
  Tuesday: [AWSTime]
  Wednesday: [AWSTime]
  Thursday: [AWSTime]
  Friday: [AWSTime]
  Saturday: [AWSTime]
}

type Plan @model @key(name: "byCreator", fields: ["creatorID"], queryField: "plansByCreator") {
  id: ID!
  title: String!
  description: String
  location: String
  placeID: String
  date: AWSDate
  time: AWSTime
  creatorID: ID!
  creator: User @connection(fields: ["creatorID"])
  invitees: [Invitee] @connection(keyName: "byPlan", fields: ["id"])
}

type Invitee @model @key(name: "byPhoneNumber", fields: ["phoneNumber"], queryField: "inviteeByPhoneNUmber") @key(name: "byPlan", fields: ["planID"], queryField: "inviteesByPlan") {
  id: ID!
  name: String!
  phoneNumber: AWSPhone!
  status: Status!
  pushToken: String
  planID: ID!
  plan: Plan @connection(fields: ["planID"])
}

enum Status {
  PENDING
  ACCEPTED
  DECLINED
}
 