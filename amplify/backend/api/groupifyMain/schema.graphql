type Interests @model @auth(rules: [{allow: private}]) {
  id: ID!
  interest: [String]
}

type AvailabilityTime @model @auth(rules: [{allow: private}]) {
  id: ID!
  Mon: [String]
  Tues: [String]
  Wed: [String]
  Thur: [String]
  Fri: [String]
  Sat: [String]
  Sun: [String]
}

enum NotificationType {
  ACCEPTED
  DECLINED
  INVITED
}

enum Gender {
  MALE
  FEMALE
  NONBINARY
  PREFER_NOT_TO_SAY
}

enum Sender {
  USER
  NOTIFICATIONPANEL
}

type NotificationFromTo @model @auth(rules: [{allow: private}]) @key(name: "byNotification", fields: ["notificationID"]) @key(name: "bySender", fields: ["senderID"]) @key(name: "byRecipient", fields: ["recipientID"]) @key(name: "byUser", fields: ["userID"]) {
  id: ID!
  senderType: Sender
  notificationID: ID!
  senderID: ID
  recipientID: ID!
  notification: Notification! @connection(fields: ["notificationID"])
  sender: User @connection
  recipient: User! @connection
  read: Boolean
  userID: ID!
}

type Notification @model @auth(rules: [{allow: private}]) {
  id: ID!
  body: String!
  data: String
  ttl: Int
  messageSubtitle: String
  sound: Boolean
  channel: String
  recipients: [NotificationFromTo] @connection(keyName: "byNotification", fields: ["id"])
  notificationType: NotificationType
}

type Plan @model @auth(rules: [{allow: private}]) {
  id: ID!
  title: String!
  description: String
  location: String
  placeID: String
  date: AWSDate
  time: AWSTime
  creatorID: ID!
  planCreatorId: ID
  creator: User @connection
  arbitrations: [PlanArbitration] @connection
  invitees: [Invitee] @connection
  notification: Notification @connection
}

type PlanArbitration @model @auth(rules: [{allow: private}]) {
  id: ID!
  stat: Status
  original_description: String
  proposed_description: String
  value_count: Int
  planID: ID
  planArbitrationsId: ID
  createdBy: Invitee @connection
  plan: Plan @connection
}

enum Status {
  PENDING
  ACCEPTED
  DECLINED
}

type Invitee @model @key(name: "byPhoneNumber", fields: ["phoneNumber"], queryField: "inviteeByPhoneNUmber") @key(name: "byPlan", fields: ["planID"], queryField: "inviteesByPlan") @auth(rules: [{allow: private}]) {
  id: ID!
  name: String!
  phoneNumber: AWSPhone!
  status: Status!
  pushToken: String
  planID: ID
  planInviteesId: ID
  plan: Plan @connection
}

type User @model @key(name: "byPhoneNumber", fields: ["phoneNumber"], queryField: "usersByPhoneNumber") @key(name: "byName", fields: ["name"], queryField: "usersByName") @auth(rules: [{allow: private}]) {
  id: ID!
  phoneNumber: AWSPhone!
  name: String!
  pushToken: String!
  friends: ID
  email: String
  availability: AvailabilityTime @connection
  notificationsSent: [NotificationFromTo] @connection(keyName: "byUser", fields: ["id"])
  age: String
  gender: Gender
  notificationsReceived: [NotificationFromTo] @connection(keyName: "byUser", fields: ["id"])
  Interest: Interests @connection
}
 