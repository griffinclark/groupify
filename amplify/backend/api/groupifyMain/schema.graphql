enum Sender {
  USER
  NOTIFICATIONPANEL
}

type NotificationFromTo
  @model
  @auth(rules: [{ allow: private }])
  @key(name: "byNotification", fields: ["notificationID"])
  @key(name: "bySender", fields: ["senderID"])
  @key(name: "byRecipient", fields: ["recipientID"]) {
  id: ID!
  senderType: Sender
  notificationID: ID!
  senderID: ID
  recipientID: ID!
  notification: Notification! @connection(fields: ["notificationID"])
  sender: User @connection(fields: ["senderID"])
  recipient: User! @connection(fields: ["recipientID"])
}

type Notification @model @auth(rules: [{ allow: private }]) {
  id: ID!
  body: String!
  data: String
  ttl: Int
  messageSubtitle: String
  sound: Boolean
  channel: String
  recipients: [NotificationFromTo]
    @connection(keyName: "byNotification", fields: ["id"])
}

type Plan @model {
  id: ID!
  title: String!
  description: String
  location: String
  placeID: String
  date: AWSDate
  time: AWSTime
  creatorID: ID!
  planCreatorId: ID
  creator: User @connection
  arbitrations: [PlanArbitration] @connection
  invitees: [Invitee] @connection
}

type PlanArbitration @model {
  id: ID!
  stat: Status
  original_description: String
  proposed_description: String
  value_count: Int
  planID: ID
  planArbitrationsId: ID
  createdBy: Invitee @connection
  plan: Plan @connection
}

enum Status {
  PENDING
  ACCEPTED
  DECLINED
}

type Invitee
  @model
  @key(
    name: "byPhoneNumber"
    fields: ["phoneNumber"]
    queryField: "inviteeByPhoneNUmber"
  )
  @key(name: "byPlan", fields: ["planID"], queryField: "inviteesByPlan") {
  id: ID!
  name: String!
  phoneNumber: AWSPhone!
  status: Status!
  pushToken: String
  planID: ID
  planInviteesId: ID
  plan: Plan @connection
}

type Availability @model {
  id: ID!
  Sunday: [AWSTime]
  Monday: [AWSTime]
  Tuesday: [AWSTime]
  Wednesday: [AWSTime]
  Thursday: [AWSTime]
  Friday: [AWSTime]
  Saturday: [AWSTime]
}

type User
  @model
  @key(
    name: "byPhoneNumber"
    fields: ["phoneNumber"]
    queryField: "usersByPhoneNumber"
  )
  @key(name: "byName", fields: ["name"], queryField: "usersByName") {
  id: ID!
  phoneNumber: AWSPhone!
  name: String!
  pushToken: String!
  friends: ID
  email: String
  availability: Availability @connection
  notificationsSent: [NotificationFromTo]
    @connection(keyName: "bySender", fields: ["id"])
  notificationsRecieved: [NotificationFromTo]
    @connection(keyName: "byRecipient", fields: ["id"])
}
